version: "3.8"

services:
  webserver:
    build:
        context: .
        dockerfile: Dockerfile_v2
    image: webserver:latest
   # container_name: webserver
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - mynetwork
      - frontend
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:80/ping" ]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s
    depends_on:
      - redis-server
#    ports:
#      - 80:80

  redis-server:
    image: redis:latest
    container_name: redis
    command:
      /bin/bash -c "redis-server --requirepass ${REDIS_PASSWORD}"
    ports:
      - 6379:6379
    networks:
      - mynetwork
  mysql-service:
    image: mysql:5.7
    ports:
      - "3306:3306"
#    restart: 'always'
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      mysql_database: "seckill"
    networks:
      - mynetwork

  client:
      image: xiaopeng163/net-box:latest
      command: sh -c "while true; do sleep 3600; done;"
      networks:
        - mynetwork
        - frontend

  nginx:
    image: nginx:stable-alpine
    ports:
      - 8000:80
    depends_on:
       webserver:
         condition: service_healthy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./var/log/nginx:/var/log/nginx
    networks:
      - frontend


networks:
  mynetwork:
  frontend:

